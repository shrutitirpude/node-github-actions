---
name: Build
run-name: ${{ github.actor }} is playing around with GitHub Actions - ${{ github.sha }}
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["24", "20"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: oven-sh/setup-bun@v2

      - name: Check running versions - Node
        run: node --version

      - name: Check running versions - Node
        run: node --version

      - name: Install project dependencies
        run: npm install

      #- name: Run the project
      #  run: node app.js

      #- name: Upload build artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: dist-${{ matrix.node-version }}
      #    path: dist
  docker-build:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["24", "20"]

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.node-version }}
          flavor: |
            latest=true

  #    - name: Download build artifacts
  #      uses: actions/download-artifact@v5
  #      with:
  #        name: dist-${{ matrix.node-version }}
  #        path: dist

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  #    - name: Generate artifact attestation
  #      uses: actions/attest-build-provenance@v3
  #      with:
  #        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.node-version }}
  #        subject-digest: ${{ steps.push.outputs.digest }}
  #        push-to-registry: true